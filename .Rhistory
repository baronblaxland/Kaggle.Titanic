#Create a scatter plot and then add the differnt plots of the dsubstations with different colours
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("topright", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), inset = 10)
#Create a png file of the plot
dev.copy(png, file="plot3.png")
dev.off()
#Create a scatter plot and then add the differnt plots of the dsubstations with different colours
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("topright", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), inset = -10)
#Create a png file of the plot
dev.copy(png, file="plot3.png")
dev.off()
#Create a scatter plot and then add the differnt plots of the dsubstations with different colours
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("topright", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), box.lty="o")
#Create a png file of the plot
dev.copy(png, file="plot3.png")
dev.off()
#Create a scatter plot and then add the differnt plots of the dsubstations with different colours
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("topright", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"))
#Create a png file of the plot
dev.copy(png, file="plot3.png")
dev.off()
#Create a scatter plot and then add the differnt plots of the dsubstations with different colours
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("topright", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),box.col="white")
#Create a png file of the plot
dev.copy(png, file="plot3.png")
dev.off()
#Create a scatter plot and then add the differnt plots of the dsubstations with different colours
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("topright", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),box.col="transparent")
#Create a png file of the plot
dev.copy(png, file="plot3.png")
dev.off()
#Create a scatter plot and then add the differnt plots of the dsubstations with different colours
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("topright", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"))
#Create a png file of the plot
dev.copy(png, file="plot3.png")
dev.off()
#Create a scatter plot and then add the differnt plots of the dsubstations with different colours
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("topright", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"))
#Create a png file of the plot
dev.copy(png, file="plot3.png")
dev.off()
# using text.font (and text.col):
op <- par(mfrow = c(2, 2), mar = rep(2.1, 4))
c6 <- terrain.colors(10)[1:6]
for(i in 1:4) {
plot(1, type = "n", axes = FALSE, ann = FALSE); title(paste("text.font =",i))
legend("top", legend = LETTERS[1:6], col = c6,
ncol = 2, cex = 2, lwd = 3, text.font = i, text.col = c6)
}
par(op)
## legends with titles at different locations
plot(x, y, type = "n")
legend("bottomright", "(x,y)", pch = 1, title = "bottomright")
legend("bottom", "(x,y)", pch = 1, title = "bottom")
legend("bottomleft", "(x,y)", pch = 1, title = "bottomleft")
legend("left", "(x,y)", pch = 1, title = "left")
legend("topleft", "(x,y)", pch = 1, title = "topleft, inset = .05",
inset = .05)
legend("top", "(x,y)", pch = 1, title = "top")
legend("topright", "(x,y)", pch = 1, title = "topright, inset = .02",
inset = .02)
legend("right", "(x,y)", pch = 1, title = "right")
legend("center", "(x,y)", pch = 1, title = "center")
## legends with titles at different locations
plot(x, y, type = "n")
legend("bottomright", "(x,y)", pch = 1, title = "bottomright")
legend("bottom", "(x,y)", pch = 1, title = "bottom")
legend("bottomleft", "(x,y)", pch = 1, title = "bottomleft")
legend("left", "(x,y)", pch = 1, title = "left")
legend("topleft", "(x,y)", pch = 1, title = "topleft, inset = .05",
inset = .05)
legend("top", "(x,y)", pch = 1, title = "top")
legend("topright", "(x,y)", pch = 1, title = "topright, inset = .02",
inset = .02)
legend("right", "(x,y)", pch = 1, title = "right")
legend("center", "(x,y)", pch = 1, title = "center")
#Create a scatter plot and then add the differnt plots of the dsubstations with different colours
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("top", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"))
#Create a png file of the plot
dev.copy(png, file="plot3.png")
dev.off()
#Create a scatter plot and then add the differnt plots of the dsubstations with different colours
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("top", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),pt.cex=1)
#Create a png file of the plot
dev.copy(png, file="plot3.png")
dev.off()
#Create a scatter plot and then add the differnt plots of the dsubstations with different colours
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("topright", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),pt.cex=1)
#Create a png file of the plot
dev.copy(png, file="plot3.png")
dev.off()
#Create a scatter plot and then add the differnt plots of the dsubstations with different colours
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("topright", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),pt.cex=1,cex=1.3)
#Create a png file of the plot
dev.copy(png, file="plot3.png")
dev.off()
#Create a scatter plot and then add the differnt plots of the dsubstations with different colours
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("topright", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),pt.cex=1,cex=0.5)
#Create a png file of the plot
dev.copy(png, file="plot3.png")
dev.off()
#Create a scatter plot and then add the differnt plots of the dsubstations with different colours
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("topright", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),pt.cex=1,cex=0.8)
#Create a png file of the plot
dev.copy(png, file="plot3.png")
dev.off()
#Create a scatter plot and then add the differnt plots of the dsubstations with different colours
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("topright", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),pt.cex=1,cex=0.8)
#Create a png file of the plot
dev.copy(png, file="plot3.png")
dev.off()
#Create a scatter plot and then add the differnt plots of the dsubstations with different colours
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("topright", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1           ","Sub_metering_2           ", "Sub_metering_3         "),pt.cex=1,cex=0.8)
#Create a png file of the plot
dev.copy(png, file="plot3.png")
dev.off()
library(MASS)
library(base)
#Read in the data
data = read.csv("C:/Users/Lizzie/Desktop/coursera/household_power_consumption.txt",
header =TRUE, sep = ";",dec=".",stringsAsFactors=FALSE);
#Convert the date is in the correct date format
data[,1]<-as.Date(data[,1],"%d/%m/%Y");
# Choose the days that are of interest for this project
days.of.interest<-as.Date(c("1/02/2007","2/02/2007"),"%d/%m/%Y");
#Choose only those days for this report
data.doi<-data[as.Date(data[,1],"%d/%m/%Y")%in% days.of.interest,];
#Join the time and data columns together and ensure they are in the correct time and data format
time.data<-paste(data.doi[,1],data.doi[,2])
time.data<-strptime(time.data, "%Y-%m-%d %H:%M:%S")
#Create a scatter plot and then add the differnt plots of the dsubstations with different colours
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("topright", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1           "
,"Sub_metering_2           "
, "Sub_metering_3         "),pt.cex=1,cex=0.8)
#Create a png file of the plot
dev.copy(png, file="plot3.png")
dev.off()
library(MASS)
library(base)
#Read in the data
data = read.csv("C:/Users/Lizzie/Desktop/coursera/household_power_consumption.txt",
header =TRUE, sep = ";",dec=".",stringsAsFactors=FALSE);
#Convert the date is in the correct date format
data[,1]<-as.Date(data[,1],"%d/%m/%Y");
# Choose the days that are of interest for this project
days.of.interest<-as.Date(c("1/02/2007","2/02/2007"),"%d/%m/%Y");
#Choose only those days for this report
data.doi<-data[as.Date(data[,1],"%d/%m/%Y")%in% days.of.interest,];
#Join the time and data columns together and ensure they are in the correct time and data format
time.data<-paste(data.doi[,1],data.doi[,2])
time.data<-strptime(time.data, "%Y-%m-%d %H:%M:%S")
par(mfrow = c(2, 2))
#First line plot of time against global active power
plot(x=time.data,y=data.doi.global.active.power,type="l",lwd=0.1,ylab="Global Active Power")
#Second line plot of voltage against time
plot(x=time.data,y=data.doi$Voltage,type="l", ylab= "Voltage", xlab = "datetime")
#Third plot of the different substations
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("topright", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1           "
,"Sub_metering_2           "
, "Sub_metering_3         "),pt.cex=1,cex=0.8)
#Fourth plot of global reactive power against time
plot(x=time.data,y=data.doi$Global_reactive_power,ylab="Global reactive power", type="l",xlab = "datetime")
#Create a png file of the plot
dev.copy(png, file="plot4.png")
dev.off()
#First line plot of time against global active power
plot(x=time.data,y=data.doi.global.active.power,type="l",lwd=0.1,ylab="Global Active Power")
library(MASS)
library(base)
#Read in the data
data = read.csv("C:/Users/Lizzie/Desktop/coursera/household_power_consumption.txt",
header =TRUE, sep = ";",dec=".",stringsAsFactors=FALSE);
#Convert the date is in the correct date format
data[,1]<-as.Date(data[,1],"%d/%m/%Y");
# Choose the days that are of interest for this project
days.of.interest<-as.Date(c("1/02/2007","2/02/2007"),"%d/%m/%Y");
#Choose only those days for this report
data.doi<-data[as.Date(data[,1],"%d/%m/%Y")%in% days.of.interest,];
#Join the time and data columns together and ensure they are in the correct time and data format
time.data<-paste(data.doi[,1],data.doi[,2])
time.data<-strptime(time.data, "%Y-%m-%d %H:%M:%S")
#Convert the global active power to numeric format
data.doi.global.active.power<-as.numeric(data.doi[,3])
par(mfrow = c(2, 2))
#First line plot of time against global active power
plot(x=time.data,y=data.doi.global.active.power,type="l",lwd=0.1,ylab="Global Active Power")
#Second line plot of voltage against time
plot(x=time.data,y=data.doi$Voltage,type="l", ylab= "Voltage", xlab = "datetime")
#Third plot of the different substations
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("topright", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1           "
,"Sub_metering_2           "
, "Sub_metering_3         "),pt.cex=1,cex=0.8)
#Fourth plot of global reactive power against time
plot(x=time.data,y=data.doi$Global_reactive_power,ylab="Global reactive power", type="l",xlab = "datetime")
#Create a png file of the plot
dev.copy(png, file="plot4.png")
dev.off()
par(mfrow = c(2, 2))
#First line plot of time against global active power
plot(x=time.data,y=data.doi.global.active.power,type="l",lwd=0.1,ylab="Global Active Power")
#Second line plot of voltage against time
plot(x=time.data,y=data.doi$Voltage,type="l", ylab= "Voltage", xlab = "datetime")
#Third plot of the different substations
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("topright", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1           "
,"Sub_metering_2           "
, "Sub_metering_3         "),pt.cex=1,cex=0.3)
#Fourth plot of global reactive power against time
plot(x=time.data,y=data.doi$Global_reactive_power,ylab="Global reactive power", type="l",xlab = "datetime")
#Create a png file of the plot
dev.copy(png, file="plot4.png")
dev.off()
par(mfrow = c(2, 2))
#First line plot of time against global active power
plot(x=time.data,y=data.doi.global.active.power,type="l",lwd=0.1,ylab="Global Active Power")
#Second line plot of voltage against time
plot(x=time.data,y=data.doi$Voltage,type="l", ylab= "Voltage", xlab = "datetime")
#Third plot of the different substations
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("topright", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1           "
,"Sub_metering_2           "
, "Sub_metering_3         "),pt.cex=1,cex=0.7)
#Fourth plot of global reactive power against time
plot(x=time.data,y=data.doi$Global_reactive_power,ylab="Global reactive power", type="l",xlab = "datetime")
#Create a png file of the plot
dev.copy(png, file="plot4.png")
dev.off()
par(mfrow = c(2, 2))
#First line plot of time against global active power
plot(x=time.data,y=data.doi.global.active.power,type="l",lwd=0.1,ylab="Global Active Power")
#Second line plot of voltage against time
plot(x=time.data,y=data.doi$Voltage,type="l", ylab= "Voltage", xlab = "datetime")
#Third plot of the different substations
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("topright", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1           "
,"Sub_metering_2           "
, "Sub_metering_3         "),pt.cex=1,cex=0.4)
#Fourth plot of global reactive power against time
plot(x=time.data,y=data.doi$Global_reactive_power,ylab="Global reactive power", type="l",xlab = "datetime")
#Create a png file of the plot
dev.copy(png, file="plot4.png")
dev.off()
par(mfrow = c(2, 2))
#First line plot of time against global active power
plot(x=time.data,y=data.doi.global.active.power,type="l",lwd=0.1,ylab="Global Active Power")
#Second line plot of voltage against time
plot(x=time.data,y=data.doi$Voltage,type="l", ylab= "Voltage", xlab = "datetime")
#Third plot of the different substations
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("topright", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1           "
,"Sub_metering_2           "
, "Sub_metering_3         "),pt.cex=1,cex=0.5)
#Fourth plot of global reactive power against time
plot(x=time.data,y=data.doi$Global_reactive_power,ylab="Global reactive power", type="l",xlab = "datetime")
#Create a png file of the plot
dev.copy(png, file="plot4.png")
dev.off()
library(MASS)
library(base)
#Read in the data
data = read.csv("C:/Users/Lizzie/Desktop/coursera/household_power_consumption.txt",
header =TRUE, sep = ";",dec=".",stringsAsFactors=FALSE);
#Convert the date is in the correct date format
data[,1]<-as.Date(data[,1],"%d/%m/%Y");
# Choose the days that are of interest for this project
days.of.interest<-as.Date(c("1/02/2007","2/02/2007"),"%d/%m/%Y");
#Choose only those days for this report
data.doi<-data[as.Date(data[,1],"%d/%m/%Y")%in% days.of.interest,];
#Join the time and data columns together and ensure they are in the correct time and data format
time.data<-paste(data.doi[,1],data.doi[,2])
time.data<-strptime(time.data, "%Y-%m-%d %H:%M:%S")
#Convert the global active power to numeric format
data.doi.global.active.power<-as.numeric(data.doi[,3])
par(mfrow = c(2, 2))
#First line plot of time against global active power
plot(x=time.data,y=data.doi.global.active.power,type="l",lwd=0.1,ylab="Global Active Power")
#Second line plot of voltage against time
plot(x=time.data,y=data.doi$Voltage,type="l", ylab= "Voltage", xlab = "datetime")
#Third plot of the different substations
plot(x=time.data,y=data.doi$Sub_metering_1,type="l", col="black"
,ylab="Energy sub metering",xlab="")
points(x=time.data,y=data.doi$Sub_metering_2,type="l", col="red")
points(x=time.data,y=data.doi$Sub_metering_3,type="l", col="blue")
legend("topright", pch = 1, col = c("black","blue", "red"),
legend = c("Sub_metering_1           "
,"Sub_metering_2           "
, "Sub_metering_3         "),pt.cex=1,cex=0.5)
#Fourth plot of global reactive power against time
plot(x=time.data,y=data.doi$Global_reactive_power,ylab="Global reactive power", type="l",xlab = "datetime")
#Create a png file of the plot
dev.copy(png, file="plot4.png")
dev.off()
install.packages("swirl")
install_from_swirl("Exploratory Data Analysis")
install_from_swirl("Exploratory Data Analysis")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
R.version.string
swirl()
library("swirl", lib.loc="~/R/win-library/3.2")
install.packages("RCurl")
library("swirl", lib.loc="~/R/win-library/3.2")
swirl()
swirl()
library("swirl", lib.loc="~/R/win-library/3.2")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
plot(diet)
plot(Diet)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library("ggplot2", lib.loc="~/R/win-library/3.2")
library("ggplot2", lib.loc="~/R/win-library/3.2")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
library(MASS)
library(base)
#Read in the data
data = read.csv("C:/Users/Lizzie/Documents/GitHub/train.txt",
header =TRUE, sep = ";",dec=".",stringsAsFactors=FALSE);
data = read.csv("C:/Users/Lizzie/Documents/GitHub/test.txt",
header =TRUE, sep = ";",dec=".",stringsAsFactors=FALSE);
library(MASS)
library(base)
#Read in the data
data = read.csv("C:/Users/Lizzie/Documents/GitHub/train.csv",
header =TRUE, sep = ";",dec=".",stringsAsFactors=FALSE);
data = read.csv("C:/Users/Lizzie/Documents/GitHub/test.csv",
header =TRUE, sep = ";",dec=".",stringsAsFactors=FALSE);
data = read.csv(".../GitHub/train.csv",
header =TRUE, sep = ";",dec=".",stringsAsFactors=FALSE);
setwd("~/GitHub/Kaggle.Titanic")
data = read.csv(".../GitHub/train.csv",
header =TRUE, sep = ";",dec=".",stringsAsFactors=FALSE);
data = read.csv("train.csv",
header =TRUE, sep = ";",dec=".",stringsAsFactors=FALSE);
library(MASS)
library(base)
set.seed(1000)
#Read in the data
data = read.csv("train.csv",
header =TRUE, sep = ";",dec=".",stringsAsFactors=FALSE);
data = read.csv("test.csv",
header =TRUE, sep = ";",dec=".",stringsAsFactors=FALSE);
library(MASS)
library(base)
set.seed(1000)
#Read in the data
data = read.csv("train.csv",
header =TRUE, sep = ";",dec=".",stringsAsFactors=FALSE);
library(MASS)
library(base)
set.seed(1000)
#Read in the data
train<-data = read.csv("train.csv",
header =TRUE, sep = ";",dec=".",stringsAsFactors=FALSE);
test<-data = read.csv("test.csv",
header =TRUE, sep = ";",dec=".",stringsAsFactors=FALSE);
library(MASS)
library(base)
set.seed(1000)
#Read in the data
train<-data = read.csv("train.csv",
header =TRUE, sep = ";",dec=".",stringsAsFactors=FALSE);
library(MASS)
library(base)
set.seed(1000)
#Read in the data
train = read.csv("train.csv",
header =TRUE, sep = ";",dec=".",stringsAsFactors=FALSE);
library(MASS)
library(base)
set.seed(1000)
#Read in the data
train = read.csv("train.csv",
header =TRUE, sep = ";",dec=".",stringsAsFactors=FALSE);
test = read.csv("test.csv",
header =TRUE, sep = ";",dec=".",stringsAsFactors=FALSE);
library(MASS)
library(base)
set.seed(1000)
#Read in the data
train = read.csv("train.csv",
header =TRUE, sep = ";",dec=".",stringsAsFactors=FALSE);
test = read.csv("test.csv",
header =TRUE, sep = ";",dec=".",stringsAsFactors=FALSE);
